for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
return(items)
}
print(string)
alphas
alphas[1]
alphas[2]
alphas[9]
paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
str_extract(text5, pattern[1])
pattern <- paste0(alphas[2], "[.].+", alphas[(3)], "[.]")
str_extract(text5, pattern[1])
str_extract(text5, pattern[1])
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
print(string)
}
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
list(print(string))
}
list(print(string)[[i]])
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
list(print(string[[1]]))
}
print(string)
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
print(string)
}
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
print(string)
}
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
sprintf(print(string))
}
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
output <- sprintf(print(string))
}
ouput <- list()
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- capture.output(print(output, string))
}
?sprintf()
?capture.output()
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- capture.output(print(output, string))
print(output)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
string <- print(string)
}
string
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
string <- print(string)
string
}
sprintf(string)
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
sprintf(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
sprintf(print(string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- sprintf(print(string))
}
output
ouput <- list()
ouput <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- sprintf(cat(output, print(string)))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- sprintf(c(output, print(string)))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- c(output, print(string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(string)
}
ouput <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
c(output, print(string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(c(output, print(string)))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(c(output, string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
sprintf(print(output, string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
print(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
output <- list(output, result)
}
capture.output(string)
sprintf(string)
output <- sprintf(string)
output <- sprintf(output, string)
output <- sprintf(print(output, string))
sprintf(print(output, string))
output <- data.frame()
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
print(rbind(output, result))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
output <- rbind(output, result)
}
View(output)
output <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
output <- rbind(output, result)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- rbind(output, string)
}
output <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- rbind(output, string)
}
output <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- list(rbind(output, string))
}
View(output)
sprintf(c(output, string))
capture.output(string)
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- list(rbind(output, string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- sprintf(rbind(output, string))
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- rbind(output, string))
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- rbind(output, string)
}
output <- ""
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
output <- rbind(output, string)
}
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
output <- rbind(output, result)
}
ouput <- data.frame()
output <- data.frame()
for(i in 1:length(alphas)){
string <- paste0(alphas[i], "-Result")
result <- print(string)
output <- rbind(output, result)
}
View(output)
View(output)
View(output)
View(output)
output$X.A.Result.
output[1]
output[1][[1]]
output[1][1]
output[[1]]
output[[1]]
output[[1]][[1]]
output[1,1]
output[1,2]
output[2,1]
output <- data.frame()
for(i in 1:length(alphas)){
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
output <- rbind(output, string)
}
View(output)
names(output)
names(output) <- alphas
View(output)
names(output) <- alphas
names(output) <- "New Business"
output
View(output)
names(output) <- "NewBusiness"
output
output[1]
output[1,1]
pattern <- paste0(alphas[i], "[.].+", alphas[(i+1)], "[.]")
string <- str_extract(text5, pattern[1])
pattern <- paste0(alphas[1], "[.].+", alphas[(2)], "[.]")
string <- str_extract(text5, pattern[1])
string
paste0(alphas[1])
paste0(alphas[2])
paste0(alphas[2], "[.]")
removal_pattern <- paste0(alphas[2], "[.]")
str_remove(str_extract(text5, pattern[1]), removal_pattern)
string <- str_extract(text5, pattern[1])
string
str_extract(string, "//d[.]")
str_extract(string, "/d[.]")
str_extract(string, "\d[.]")
str_extract(string, "\\d[.]")
str_extract_all(string, "\\d[.]")
string
alpha_subs <- str_extract_all(string, "\\d[.]")
alpha_subs
alpha_subs[[1]]
str_remove_all(alpha_subs[[1]], "[.]")
alpha_subs <- str_remove_all(alpha_subs[[1]], "[.]")
alpha_subs
length(alpha_subs)
seq(1, length(alpha_subs), by = 1)
nums <- seq(1, length(alpha_subs), by = 1)
alpha_subs == nums
alpha_subs[alpha_subs == nums]
alpha_subs <- alpha_subs[alpha_subs == nums]
alpha_subs[length(alpha_subs)+1] <- "WQZ"
length(alpha_subs)
alpha_subs
string
paste(string, "WQZ.")
string <- paste(string, "WQZ.")
string
string
View(output)
string
paste0(alpha_subs[1])
paste0(alpha_subs[1], "[.].+", alpha_subs[2], "[.]")
pattern_subs <- paste0(alpha_subs[1], "[.].+", alpha_subs[2], "[.]")
str_extract(string, pattern_subs)
extract_alphas <- function(txt){
txt1 <- str_c(txt[1], txt[2])
txt2 <- str_extract(
str_remove(str_squish(txt1), ".+(?=NEW BUSINESS)"),
"(?<=NEW BUSINESS).+(?=ADJOURNMENT)")
txt3 <- str_extract_all(txt2, "[:alpha:][.]")
return(txt3)
}
extract_alphas(text)
alphas <- extract_alphas(text)
alphas[[1]]
str_remove_all(alphas[[1]], "[.]")
pattern <- paste0(alphas[1], "[.].+", alphas[(2)], "[.]")
pattern
alphas <- extract_alphas(text)
alphas <- str_remove_all(alphas[[1]], "[.]")
pattern <- paste0(alphas[1], "[.].+", alphas[(2)], "[.]")
pattern
text5
str_extract(text5, "A[.].+B[.]")
string <- str_extract(text5, "A[.].+B[.]")
str_extract_all(string, "\\d[.]")
str_extract(text5, pattern[1])
str_extract(str_extract(text5, pattern[1]), "\\d{1-2}[.]")
str_extract(str_extract(text5, pattern[1]), "\\d{1:2}[.]")
str_extract(str_extract(text5, pattern[1]), "[:alnum:][.]")
str_extract(str_extract(text5, pattern[1]), "[:alnum:][.]")
str_extract(str_extract(text5, pattern[1]), "\\d[.]")
str_extract(str_extract_all(text5, pattern[1]), "[:alnum:][.]")
str_extract_all(str_extract(text5, pattern[1]), "[:alnum:][.]")
alphansubs <- str_extract_all(str_extract(text5, pattern[1]), "[:alnum:][.]")
View(alphansubs)
str_extract_all(string, "\\d[.]")
alphansubs
alphansubs[[1]]
text5
str_extract(text5, "[:alpha:][.].+[:alpha:][.]")
str_extract_all(text5, "[:alnum:][.]")
str_extract(text5, "[:alpha:][.].+[:alpha:][.]")
str_extract_all(text5, "[:alnum:][.]")
text5
text5 <- str_extract_all(text4, "[:alpha:][.]")
text1 <- str_c(text[1], text[2])
text2 <- str_squish(text1)
text3 <- str_remove(text2, ".+(?=NEW BUSINESS)")
text4 <- str_extract(text3, "(?<=NEW BUSINESS).+(?=ADJOURNMENT)")
text5 <- str_extract_all(text4, "[:alpha:][.]")
text5
text1 <- str_c(text[1], text[2])
text2 <- str_squish(text1)
text3 <- str_remove(text2, ".+(?=NEW BUSINESS)")
text4 <- str_extract(text3, "(?<=NEW BUSINESS).+(?=ADJOURNMENT)")
text4
text5 <- str_extract_all(text4, "[:alpha:][.]")
text5
str_extract_all(text4, "[:alnum:][.]")
str_extract_all(text4, "[:alnum:][.]")
str_extract(text5, "[:alpha:][.].+[:alpha:][.]")
str_extract(text5, "[:alnum:][.].+[:alnum:][.]")
str_extract(text4, "[:alnum:][.].+[:alnum:][.]")
str_extract_all(text4, "[:alnum:][.]")
items <- str_extract_all(text4, "[:alnum:][.]")
item
items
items[[1]]
str_extract(items[[1]], "\\d")
nums <- str_extract(items[[1]], "\\d")
nums
nums
nums
items
items[1]
items[1][[1]]
items[[1]]
items[[1]]
str_extract(items[[1]], "[:alpha:][.]")
str_extract(items[[1]], "[:alpha:][.]") == LETTERS
items[str_extract(items[[1]], "[:alpha:][.]")]
items[[i]][str_extract(items[[1]], "[:alpha:][.]")]
items[[1]][str_extract(items[[1]], "[:alpha:][.]")]
items[str_extract(items[[1]], "[:alpha:][.]")]
which(str_extract(items[[1]], "[:alpha:][.]"))
which(str_extract(items[[1]], "[:alpha:][.]") != NA)
str_extract(items[[1]], "[:alpha:][.]")
is.na(str_extract(items[[1]], "[:alpha:][.]"))
items[is.na(str_extract(items[[1]], "[:alpha:][.]"))]
items
items[[1]]
items[1]
items[1,1]
items[[1]][is.na(str_extract(items[[1]], "[:alpha:][.]"))]
items[[1]][is.na(str_extract(items[[1]], "[:alpha:][.]"))]
nums
require(pdftools)
require(stringr)
source("functions3.r")
folder <- "all"
files <- list.files(path =folder, "\\.pdf")
file_path <- paste0(folder, "/", files[[1]])
text <- pdftools::pdf_text(file_path)
files[[1]]
text1 <- str_c(text[1], text[2])
text2 <- str_squish(text1)
text3 <- str_remove(text2, ".+(?=NEW BUSINESS)")
text4 <- str_extract(text3, "(?<=NEW BUSINESS).+(?=ADJOURNMENT)")
text5 <- str_extract_all(text4, "[:alpha:][.]")
View(text5)
text4
str_extract(text4, "A[.].+B[.]")
str_extract(text4, "A[.].+B[.]")
str_extract(text4, "[:alpha:][.].+[:alpha:][.]")
str_extract(text4, "A[.].+B[.]")
str_extract(str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")
str_extract_all(str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")
string1
string1 <- str_extract_all(str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")
string1[[1]]
string1[[1]] == "1."
string1[[1]][2] == "1."
str_extract(text4, "A[.].+B[.]")
string1[[1]]
string1[[1]][1]
string1[[1]][1]
string1[[1]]
string1[[1]][1]
pattern
string1[[1]][1]
paste0(string1[[1]][1], string1[[2]][1])
paste0(string1[[1]][1], string1[[1]][2])
paste0(string1[[1]][1], ".+", string1[[1]][2])
str_remove(string1, "[.]")
str_extract_all(str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")
str_remove(str_extract_all(str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]"), "[.]")
str_remove_all(
str_extract_all(
str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]"), "[.]")
str_remove_all(
str_extract_all(
str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")[[1]], "[.]")
string1
string1
string1
string1
string1 <- str_remove_all(
str_extract_all(
str_extract(text4, "A[.].+B[.]"), "[:alnum:][.]")[[1]], "[.]")
string1
string1[1]
string1[2]
string1[2]
if(string1[2] == "1"){
string1[1]
}
string1[2]
string1
string1[2]
string1[2]
string1[2]
string1
string1[1]
str_extract(text4, "A[.].+1[.]")
string1
str_extract(text4, "A[.].+1[.]")
str_extract(text4, "A[.].+1[.]")
str_extract(text4, "A[.].+B[.]")
str_extract(str_extract(text4, "A[.].+B[.]"), "A[.].+1[.]")
str_extract(str_extract(text4, "A[.].+B[.]"), "A[.].+1[.]")
if(string1[2] == "1"){
str_extract(str_extract(text4, "A[.].+B[.]"), "A[.].+1[.]")
} else {
str_extract(text4, "A[.].+B[.]")
}
alphansubs <- str_extract_all(
str_extract(text5, pattern[1]), "[:alnum:][.]")
alphas <- extract_alphas(text)
extract_alphas <- function(txt){
# Combine page 1 and 2 since the new business often span the two
txt1 <- str_c(txt[1], txt[2])
# Extract everything between "NEW BUSINESS" and "ADJOURNMENT"
txt2 <- str_extract(
str_remove(str_squish(txt1), ".+(?=NEW BUSINESS)"),
"(?<=NEW BUSINESS).+(?=ADJOURNMENT)")
# Extract all alpha characters that are followed by a "."
txt3 <- str_extract_all(txt2, "[:alpha:][.]")
# Return the result as a list
return(txt3)
}
alphas <- extract_alphas(text)
alphas <- str_remove_all(alphas[[1]], "[.]")
pattern <- paste0(alphas[1], "[.].+", alphas[(2)], "[.]")
alphansubs <- str_extract_all(
str_extract(text5, pattern[1]), "[:alnum:][.]")
alphansubs[[1]]
alphansubs
alphansubs <- str_extract_all(
str_extract(text4, pattern[1]), "[:alnum:][.]")
alphansubs
alphas <- extract_alphas(text4)
alphas <- extract_alphas(text)
alphas[[1]]
alphas <- str_remove_all(alphas[[1]], "[.]")
alphas
alphas[alphas == LETTERS]
alphas <- alphas[alphas == LETTERS]
pattern <- paste0(alphas[1], "[.].+", alphas[(2)], "[.]")
alphansubs <- str_extract_all(
str_extract(text4, pattern[1]), "[:alnum:][.]")
alphansubs
alphansubs
alphas[1]
alphas[2]
str_extract_all(
str_extract(text, pattern[1]), "[:alnum:][.]")
pattern
